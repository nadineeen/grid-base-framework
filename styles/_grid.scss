// GRID
@import './breakpoints';
$gutterSize: 15px;

.container {
  width: 100%;
  padding: $gutterSize;
}

.row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: center;
  padding: $gutterSize;
}

.col {
  @extend .row;
  flex-direction: column;
}

.nowrap {
  flex-wrap: nowrap;
}

.jc-c {
  justify-content: center;
}

.jc-sb {
  justify-content: space-between;
}

.ai-fs {
  align-items: flex-start;
}

.ai-fe {
  align-items: flex-end;
}

/* 
  MEDIA QUERIES FOR GRID 
*/
@mixin columns-layout($base-sel) {
  @for $i from 1 through 12 {
    .#{$base-sel}-#{$i} {
      width: 100% / (12 / $i);
    }
  }
}

@mixin rows-layout($base-sel) {
  @for $i from 1 through 12 {
    .#{$base-sel}-#{$i} {
      @extend .row;
      min-height: 100px * $i;
    }
  }
}
/* Fixed Row Heights at all screen sizes */
@include rows-layout(row);
/* Columns at all screen sizes*/
@include columns-layout(col);

/* Responsive selectors for column */
@each $sel, $size in zip($screenSelectors, $screenSizes) {
  [class*='col-#{$sel}'],
  [class*='container-#{$sel}'] {
    width: 100%;
    margin: 0 auto;
  }

  [class*='container-#{$sel}'] {
    padding: $gutterSize;
  }

  @media only screen and (min-width: #{$size}) {
    // Changes to columns at certain breakpoints
    @include columns-layout(col-#{$sel});
  }
}

/* Responsive selectors for container */
@for $i from 1 through length($screenSizes) {
  // for each size
  @media only screen and (min-width: nth($screenSizes, $i)) {
    // make changes to container for all selectors that are equal or smaller than this screen width
    @for $j from 1 through $i {
      .container-#{nth($screenSelectors, $j)} {
        width: nth($screenSizes, $i) * 0.98;
      }
    }
  }
}
